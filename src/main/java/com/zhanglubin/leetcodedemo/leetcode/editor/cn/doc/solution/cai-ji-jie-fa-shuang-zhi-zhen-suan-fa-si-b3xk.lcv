### 解题思路

定义两个指针，左指针 left ，右指针 right ，分别从左右两侧对 nums 进行取值求和
如果 sum(left + right) == target，那么就返回此时 left 和 right 对应的索引
nums 遍历结束，返回 null；

### 代码

* java

```java
class Solution {
    public int[] twoSum(int[] nums, int target) {
        int left = 0;
        int right = 0;
        for (int i = 0; i < nums.length; i++) {
            left = nums[i];
            for (int j = nums.length - 1; j > i; j--) {
                right = nums[j];
                if ((left + right) == target) {
                    return new int[]{i, j};
                }
            }

        }
        return null;
    }
}
```

### 执行结果

![image.png](https://pic.leetcode.cn/1676949726-obsWwe-image.png)

* 

```
由于定义了两个 for 循环，且边界条件不同
所以，上述代码的时间复杂度为 O(n*m)

```

欢迎各位大佬批评指正。
